[{"E:\\mosh-hemadnai-react\\movieproject\\src\\index.js":"1","E:\\mosh-hemadnai-react\\movieproject\\src\\App.js":"2","E:\\mosh-hemadnai-react\\movieproject\\src\\services\\fakeMovieService.js":"3","E:\\mosh-hemadnai-react\\movieproject\\src\\services\\fakeGenreService.js":"4","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\Like.jsx":"5","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\pagination.jsx":"6","E:\\mosh-hemadnai-react\\movieproject\\src\\utils\\paginate.js":"7","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\ListGroup.jsx":"8","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\movies.jsx":"9","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\movieTable.jsx":"10","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\TableHeader.jsx":"11","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\TableBody.jsx":"12"},{"size":311,"mtime":1608453218745,"results":"13","hashOfConfig":"14"},{"size":168,"mtime":1608282538562,"results":"15","hashOfConfig":"14"},{"size":2608,"mtime":1606806129127,"results":"16","hashOfConfig":"14"},{"size":270,"mtime":1606804733786,"results":"17","hashOfConfig":"14"},{"size":301,"mtime":1606836266757,"results":"18","hashOfConfig":"14"},{"size":1111,"mtime":1606895458294,"results":"19","hashOfConfig":"14"},{"size":199,"mtime":1606894312412,"results":"20","hashOfConfig":"14"},{"size":756,"mtime":1608284307638,"results":"21","hashOfConfig":"14"},{"size":2655,"mtime":1608286157202,"results":"22","hashOfConfig":"14"},{"size":1076,"mtime":1608452317775,"results":"23","hashOfConfig":"14"},{"size":1069,"mtime":1608453439436,"results":"24","hashOfConfig":"14"},{"size":604,"mtime":1608452223154,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qxyw4",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\mosh-hemadnai-react\\movieproject\\src\\index.js",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\App.js",[],["53","54"],"E:\\mosh-hemadnai-react\\movieproject\\src\\services\\fakeMovieService.js",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\services\\fakeGenreService.js",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\Like.jsx",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\pagination.jsx",["55"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Pagination(props) {\r\n  const { itemsCount, pageSize, currentPage, onPageChange } = props;\r\n\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  const pages = _.range(1, pagesCount + 1);\r\n  if (pagesCount === 1) return null;\r\n\r\n  return (\r\n    <nav aria-label=\"Page navigation example \" className=\"m-3\">\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n            >\r\n              <a className=\"page-link\" onClick={() => onPageChange(page)}>\r\n                {page}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","E:\\mosh-hemadnai-react\\movieproject\\src\\utils\\paginate.js",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\ListGroup.jsx",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\movies.jsx",["56"],"import React, { useState } from \"react\";\r\nimport { getMovies } from \"../services/fakeMovieService\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"../utils/paginate.js\";\r\nimport ListGroup from \"./common/ListGroup.jsx\";\r\nimport { getGenres } from \"../services/fakeGenreService\";\r\nimport MovieTable from \"./movieTable.jsx\";\r\nimport _ from \"lodash\";\r\n\r\nfunction Movies() {\r\n  const [allMovies, setMovies] = useState(getMovies());\r\n  const pageSize = 4;\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [genres, setGenres] = useState([\r\n    { _id: \"\", name: \"AllGenres\" },\r\n    ...getGenres(),\r\n  ]);\r\n  const [selectedGenre, setCurrentGenre] = useState(\"\");\r\n  const [sortColumn, setSortColumn] = useState({ path: \"title\", order: \"asc\" });\r\n\r\n  function handleDelete(movie) {\r\n    const newMovies = allMovies.filter((m) => m._id !== movie._id);\r\n    setMovies(newMovies);\r\n  }\r\n\r\n  function handlePageChange(page) {\r\n    setCurrentPage(page);\r\n  }\r\n\r\n  function handleLike(movie) {\r\n    const newMovies = [...allMovies];\r\n    const index = newMovies.indexOf(movie);\r\n    newMovies[index] = { ...newMovies[index] };\r\n    newMovies[index].liked = !newMovies[index].liked;\r\n    setMovies(newMovies);\r\n  }\r\n\r\n  function handleGenreSelect(genre) {\r\n    setCurrentGenre(genre);\r\n    setCurrentPage(1);\r\n  }\r\n\r\n  function handleSort(newSortColumn) {\r\n    setSortColumn(newSortColumn);\r\n  }\r\n\r\n  const filtered =\r\n    selectedGenre && selectedGenre._id\r\n      ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\r\n      : allMovies;\r\n\r\n  const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n  const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n  if (movies.length === 0)\r\n    return <h1 className=\"m-2\">There are no movies in the database</h1>;\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-3\">\r\n        <ListGroup\r\n          items={genres}\r\n          selectedItem={selectedGenre}\r\n          onItemSelect={handleGenreSelect}\r\n        />\r\n      </div>\r\n      <div className=\"col\">\r\n        <div>\r\n          <h2 className=\"m-3\">\r\n            There are {filtered.length} movies in the database\r\n          </h2>\r\n        </div>\r\n        <MovieTable\r\n          movies={movies}\r\n          sortColumn={sortColumn}\r\n          onDelete={handleDelete}\r\n          onLike={handleLike}\r\n          onSort={handleSort}\r\n        />\r\n        <Pagination\r\n          itemsCount={filtered.length}\r\n          pageSize={pageSize}\r\n          currentPage={currentPage}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","E:\\mosh-hemadnai-react\\movieproject\\src\\components\\movieTable.jsx",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\TableHeader.jsx",[],"E:\\mosh-hemadnai-react\\movieproject\\src\\components\\common\\TableBody.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":23,"column":15,"nodeType":"63","endLine":23,"endColumn":75},{"ruleId":"64","severity":1,"message":"65","line":14,"column":18,"nodeType":"66","messageId":"67","endLine":14,"endColumn":27},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'setGenres' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]